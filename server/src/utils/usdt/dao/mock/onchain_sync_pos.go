// Code generated by MockGen. DO NOT EDIT.
// Source: onchain_sync_pos.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOnchainSyncPosDaoInterface is a mock of OnchainSyncPosDaoInterface interface
type MockOnchainSyncPosDaoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOnchainSyncPosDaoInterfaceMockRecorder
}

// MockOnchainSyncPosDaoInterfaceMockRecorder is the mock recorder for MockOnchainSyncPosDaoInterface
type MockOnchainSyncPosDaoInterfaceMockRecorder struct {
	mock *MockOnchainSyncPosDaoInterface
}

// NewMockOnchainSyncPosDaoInterface creates a new mock instance
func NewMockOnchainSyncPosDaoInterface(ctrl *gomock.Controller) *MockOnchainSyncPosDaoInterface {
	mock := &MockOnchainSyncPosDaoInterface{ctrl: ctrl}
	mock.recorder = &MockOnchainSyncPosDaoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOnchainSyncPosDaoInterface) EXPECT() *MockOnchainSyncPosDaoInterfaceMockRecorder {
	return m.recorder
}

// SetLastestTransaction mocks base method
func (m *MockOnchainSyncPosDaoInterface) SetLastestTransaction(addr, tx string, page uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLastestTransaction", addr, tx, page)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLastestTransaction indicates an expected call of SetLastestTransaction
func (mr *MockOnchainSyncPosDaoInterfaceMockRecorder) SetLastestTransaction(addr, tx, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLastestTransaction", reflect.TypeOf((*MockOnchainSyncPosDaoInterface)(nil).SetLastestTransaction), addr, tx, page)
}

// GetLastestTransaction mocks base method
func (m *MockOnchainSyncPosDaoInterface) GetLastestTransaction(addr string) (uint32, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastestTransaction", addr)
	ret0, _ := ret[0].(uint32)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLastestTransaction indicates an expected call of GetLastestTransaction
func (mr *MockOnchainSyncPosDaoInterfaceMockRecorder) GetLastestTransaction(addr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastestTransaction", reflect.TypeOf((*MockOnchainSyncPosDaoInterface)(nil).GetLastestTransaction), addr)
}
