appname = otc
# app url
appurl=http://127.0.0.1:8080
httpport = 8080
runmode = dev
RegionId=0
ServerId=0
copyrequestbody = true
CaptchaExpiredSecs=7200
AccessTokenExpiredSecs=7200
SignatureExpiredSecs=120
SignatureTokenExpiredSecs=120
OrmDebug = true
InviteCodeRegion=0
AWSAccessKeyId=AKIAIRSMVUQN6TAEPOQA
AWSSecretKey=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
EnableAdmin = true
AdminAddr = "localhost"
AdminPort = 8088

[log]
#log path
path = "svrlog"
#log file configuration
#only record the logs whose level <= the configuration below.
#Emergency 0, Alert 1, Critical 2, Error 3, Warning 4, Notice 5, Informational 6, Debug 7
level = 7
configs = {"filename":"%s","level":7}
#output to stdout
stdout = true

[database]
default={"user":"otc","password":"otc","urls":"127.0.0.1:3306","maxidleconns":500,"maxopenconns":1000,"maxlifttime":10}
otc={"user":"otc","password":"otc","urls":"127.0.0.1:3306","maxidleconns":500,"maxopenconns":1000,"maxlifttime":10}
otc_admin={"user":"otc","password":"otc","urls":"127.0.0.1:3306","maxidleconns":500,"maxopenconns":1000,"maxlifttime":10}

[redis]
host = "127.0.0.1"
port = 6379
auth = ""
# redis distributed lock
# The maximum seconds to lock a key for
LockExpired=60
# The number of time the acquisition of a lock will be retried. 0 means do not retry
LockRetryCount=5
# RetryDelay is the amount of milliseconds to wait between retries.
LockRetryDelay=100

[captcha]
width=60
height=120
mode=1
len=4

[usdt]
platformuaid=100
precision=4
otxport=4040
minFee=20
maxFee=100000
unitFee=80
symbol=USDT
ConfirmationLimit=6
auditMortgageLimit=1.1
auditReleaseLimit=1.1
onchainDataRegionNum=20
# 1-fastest 2-halfHour 3-hour
feeMode=2
# the frequency limit for user sync transactions from chain
syncFrequency=7200
# usdt pirces conf
MaxPrice=10.0
MinPrice=4.0
SyncPriceSecs=300
PricePrecision=2
#sync on chain transaction interval seconds
SyncOnChainTxInterval=30
#sync on chain transaction lock seconds
SyncOnChainTxLockSecs=10800

#sync wallet on chain transaction interval seconds
SyncWalletOnChainTxInterval=30
#sync wallet on chain transaction lock seconds
SyncWalletOnChainTxLockSecs=10800

# 转账手续费溢价
Premium=0.05
[eusd]
Precision=4
CommissionWithdrawLowLimit=0.1

[payment]
LowMoneyPerTx=100
HighMoneyPerTx=5000000
TimesPerDay=10
MoneyPerDay=5000000
MoneySum=100000000

[eos]
main_rpc = "http://88.99.193.44:8888"
wallet_rpc = "http://127.0.0.1:8900"

[cron]
# "<task name>":"<second> <minute> <hour> <day> <month> <week>"
# Timer={"SyncUsdtPrice":"0 */5 * * * *","SyncBtcPrice":"0 */5 * * * *","SyncServerState":"0 * * * * *","TaskDailySalary":"0 0 02 * * *"}
Timer={}

[agent]
# how many percent of agent withdraw fee
WithdrawFee=0
# invite url
InviteUrl=https://renrenotc.com/hc?code=%s

[game]
# EusdExchangeRate=6 means "1 eusd = 6 game coin"
EusdExchangeRate=1
# Eusd Limit
EusdLimit=8000
# game user offline check interval, unit : second.
OfflineInterval=300
# game channel url
ChannelUrl=http://150.109.50.118:8000
# game plat id
PlatId=57
# game api key
AppKey=abc@123
# game channel percentage
GameChannelPercentage=0.1
# game redeem ack retry seconds
RedeemRetry=5,10,15

[umeng_push]
appkey = "5c9b756561f564d3c6000e0d"
master_secret = "gonnlw57k1mayiaxjegrkkh4r4slwelk"

[oss]
accessKeyId="LTAIBUAnoTGVLcdm"
accessKeySecret="BAWQeZN41RLNUx2O81PNbFmW0VR9UQ"
endpoint="oss-cn-hangzhou.aliyuncs.com"
bucketName="test-wallet"

[anti_replay]
ignore={"get":{"all":true,"static":[],"dynamic":[]},"post":{"static":["/v1/user/login","/v1/sms/sendcode"]}}
salt="ZyGYFWIWO1BWYl9lpBKaNtKmXxFRrHwu5PgJD9V332AEWweZY1QdrRyTbjcAjmaq"

[ky_game]
apiurl="https://kyapi.ky206.com:189"
recordapiurl="https://kyrecord.ky206.com:190"
agent="71038"
deskey="BEFEFD9D87B44B8A"
md5key="A5C4E767559AE9F8"
linecode="test001"

[ag_game]
apiurl="http://203.78.143.173:35842"
prefix="QianDuoDuo"
deskey="f8bf5527577b41c08f4711cfae323016"

[rg_game]
apiurl="http://www.devbj.com/api"
prefix="qdd_"
deskey="2cac7adc65935858c29a8488d6b7aecb"

[rabbitmq]
address=amqp://root:root@localhost:5672/
producer={"eusd.check":{"exchange":"eusd.check", "need_ae":true, "is_delay":true}, "usdt.transfer":{"exchange":"usdt.transfer","handle":"", "need_ae":true}, "server.ping":{"exchange":"server.ping","handle":"", "auto_ack":true},"task.result":{"exchange":"task.result", "handle":"", "auto_ack":true}, "eusd.transfer":{"exchange":"eusd.transfer","handle":"", "need_ae":true}, "order.check":{"exchange":"order.check","handle":"", "is_delay":true}}
consumer={"task.otc.0.0":{"exchange":"task.otc.0.0", "handle":"TaskDistribute", "need_ae":true},"order.check":{"exchange":"order.check","handle":"OrderCheck"}}
broadcastProducer={}
broadcastConsumer={"task.otc":{"exchange":"task.otc", "handle":"TaskDistribute", "need_ae":true}}
isRpcServer=true
rpcServerFuncName=Rpc

[btc]
# btc pirces conf
MaxPrice=138000.0
MinPrice=20700.0
SyncPriceSecs=300
PricePrecision=2

[agent]
lockTimeout=10
retryDelay=100
retryCount=500
